let mapleader=" "

"==================================
" Splits
"==================================
nnoremap <Leader>h :split<CR>
nnoremap <Leader>v :vsplit<CR>

"==================================
" Movement
"==================================
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
nnoremap <BS> <C-^>
nnoremap <Right> :cnext<CR>
nnoremap <Left> :cprev<CR>
nnoremap gp :Ggrep<Space>

"==================================
" Searching
"==================================
nnoremap <Leader>b :ls<CR>:b<Space>
nnoremap <Leader>p :call SmartFzfSearching()<CR>
nmap g<C-p> :Files<CR>
nmap gs<C-p> :GFiles?<CR>
nmap <leader>T :BTags<CR>
nmap g<leader>T :Tags<CR>
nmap <leader>l :BLines<CR>
nmap g<leader>l :Lines<CR>
nmap <leader>b :Buffers<CR>
nmap <leader>c :BCommits<CR>
nmap g<leader>c :Commits<CR>
nmap <leader>m :Marks<CR>
nnoremap gb :Git blame<cr>
nmap <Leader>t :TagbarToggle<CR>

"==================================
" Folding
"==================================
map ,f :set foldmethod=indent<cr>zM<cr>
map ,F :set foldmethod=manual<cr>zR<cr>

"==================================
" Coc
"==================================
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nmap <leader>rn <Plug>(coc-rename)

"==================================
" NERDTree
"==================================
map <Leader>nt :NERDTreeToggle<CR>
